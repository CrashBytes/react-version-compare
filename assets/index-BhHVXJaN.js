import{h as I,i as J,u as M,a as N,b as B,w as X}from"./Compare-W2pgj9l5.js";import{D as re,x as fe,F as ie,e as ne,A as ae,z as le,q as te,v as se,c as de,p as ue,r as ve,l as oe,o as ce,n as we,f as ge,j as me,B as ye,t as pe,m as Fe,E as He,s as be,y as Se,g as xe,k as De}from"./Compare-W2pgj9l5.js";import"./jsx-runtime-B17DEhS-.js";import"./iframe-Be8VXnR1.js";function U(n){var r=n.split(/\n/),i=[],e=0;function t(){var a={};for(i.push(a);e<r.length;){var l=r[e];if(/^(---|\+\+\+|@@)\s/.test(l))break;var v=/^(?:Index:|diff(?: -r \w+)+)\s+(.+?)\s*$/.exec(l);v&&(a.index=v[1]),e++}for(u(a),u(a),a.hunks=[];e<r.length;){var l=r[e];if(/^(Index:\s|diff\s|---\s|\+\+\+\s|===================================================================)/.test(l))break;if(/^@@/.test(l))a.hunks.push(s());else{if(l)throw new Error("Unknown line "+(e+1)+" "+JSON.stringify(l));e++}}}function u(a){var l=/^(---|\+\+\+)\s+(.*)\r?$/.exec(r[e]);if(l){var v=l[2].split("	",2),o=(v[1]||"").trim(),f=v[0].replace(/\\\\/g,"\\");/^".*"$/.test(f)&&(f=f.substr(1,f.length-2)),l[1]==="---"?(a.oldFileName=f,a.oldHeader=o):(a.newFileName=f,a.newHeader=o),e++}}function s(){var a,l=e,v=r[e++],o=v.split(/@@ -(\d+)(?:,(\d+))? \+(\d+)(?:,(\d+))? @@/),f={oldStart:+o[1],oldLines:typeof o[2]>"u"?1:+o[2],newStart:+o[3],newLines:typeof o[4]>"u"?1:+o[4],lines:[]};f.oldLines===0&&(f.oldStart+=1),f.newLines===0&&(f.newStart+=1);for(var p=0,g=0;e<r.length&&(g<f.oldLines||p<f.newLines||!((a=r[e])===null||a===void 0)&&a.startsWith("\\"));e++){var w=r[e].length==0&&e!=r.length-1?" ":r[e][0];if(w==="+"||w==="-"||w===" "||w==="\\")f.lines.push(r[e]),w==="+"?p++:w==="-"?g++:w===" "&&(p++,g++);else throw new Error("Hunk at line ".concat(l+1," contained invalid line ").concat(r[e]))}if(!p&&f.newLines===1&&(f.newLines=0),!g&&f.oldLines===1&&(f.oldLines=0),p!==f.newLines)throw new Error("Added line count did not match for hunk at line "+(l+1));if(g!==f.oldLines)throw new Error("Removed line count did not match for hunk at line "+(l+1));return f}for(;e<r.length;)t();return i}function G(n,r,i){var e=!0,t=!1,u=!1,s=1;return function a(){if(e&&!u){if(t?s++:e=!1,n+s<=i)return n+s;u=!0}if(!t)return u||(e=!0),r<=n-s?n-s++:(t=!0,a())}}function K(n,r,i){i===void 0&&(i={});var e;if(typeof r=="string"?e=U(r):Array.isArray(r)?e=r:e=[r],e.length>1)throw new Error("applyPatch only works with a single input.");return Q(n,e[0],i)}function Q(n,r,i){i===void 0&&(i={}),(i.autoConvertLineEndings||i.autoConvertLineEndings==null)&&(I(n)&&J(r)?r=M(r):N(n)&&B(r)&&(r=X(r)));var e=n.split(`
`),t=r.hunks,u=i.compareLine||function(b,d,S,m){return d===m},s=i.fuzzFactor||0,a=0;if(s<0||!Number.isInteger(s))throw new Error("fuzzFactor must be a non-negative integer");if(!t.length)return n;for(var l="",v=!1,o=!1,f=0;f<t[t.length-1].lines.length;f++){var p=t[t.length-1].lines[f];p[0]=="\\"&&(l[0]=="+"?v=!0:l[0]=="-"&&(o=!0)),l=p}if(v){if(o){if(!s&&e[e.length-1]=="")return!1}else if(e[e.length-1]=="")e.pop();else if(!s)return!1}else if(o){if(e[e.length-1]!="")e.push("");else if(!s)return!1}function g(b,d,S,m,z,y,c){m===void 0&&(m=0),z===void 0&&(z=!0),y===void 0&&(y=[]),c===void 0&&(c=0);for(var x=0,T=!1;m<b.length;m++){var D=b[m],C=D.length>0?D[0]:" ",A=D.length>0?D.substr(1):D;if(C==="-")if(u(d+1,e[d],C,A))d++,x=0;else return!S||e[d]==null?null:(y[c]=e[d],g(b,d+1,S-1,m,!1,y,c+1));if(C==="+"){if(!z)return null;y[c]=A,c++,x=0,T=!0}if(C===" ")if(x++,y[c]=e[d],u(d+1,e[d],C,A))c++,z=!0,T=!1,d++;else return T||!S?null:e[d]&&(g(b,d+1,S-1,m+1,!1,y,c+1)||g(b,d+1,S-1,m,!1,y,c+1))||g(b,d,S-1,m+1,!1,y,c)}return c-=x,d-=x,y.length=c,{patchedLines:y,oldLineLastI:d-1}}for(var w=[],j=0,f=0;f<t.length;f++){for(var h=t[f],F=void 0,$=e.length-h.oldLines+s,H=void 0,E=0;E<=s;E++){H=h.oldStart+j-1;for(var q=G(H,a,$);H!==void 0&&(F=g(h.lines,H,E),!F);H=q());if(F)break}if(!F)return!1;for(var O=a;O<H;O++)w.push(e[O]);for(var W=0;W<F.patchedLines.length;W++){var p=F.patchedLines[W];w.push(p)}a=F.oldLineLastI+1,j=H+1-h.oldStart}for(var f=a;f<e.length;f++)w.push(e[f]);return w.join(`
`)}function k(n,r){var i=typeof n=="string"?U(n):n,e=0;function t(){var u=i[e++];if(!u)return r.complete();r.loadFile(u,function(s,a){if(s)return r.complete(s);var l=K(a,u,r);r.patched(u,l,function(v){if(v)return r.complete(v);t()})})}t()}function R(n){for(var r=[],i,e,t=0;t<n.length;t++)i=n[t],i.added?e=1:i.removed?e=-1:e=0,r.push([e,i.value]);return r}function P(n){for(var r=[],i=0;i<n.length;i++){var e=n[i];e.added?r.push("<ins>"):e.removed&&r.push("<del>"),r.push(V(e.value)),e.added?r.push("</ins>"):e.removed&&r.push("</del>")}return r.join("")}function V(n){var r=n;return r=r.replace(/&/g,"&amp;"),r=r.replace(/</g,"&lt;"),r=r.replace(/>/g,"&gt;"),r=r.replace(/"/g,"&quot;"),r}export{re as Diff,K as applyPatch,k as applyPatches,fe as arrayDiff,ie as canonicalize,ne as characterDiff,R as convertChangesToDMP,P as convertChangesToXML,ae as createPatch,le as createTwoFilesPatch,te as cssDiff,se as diffArrays,de as diffChars,ue as diffCss,ve as diffJson,oe as diffLines,ce as diffSentences,we as diffTrimmedLines,ge as diffWords,me as diffWordsWithSpace,ye as formatPatch,pe as jsonDiff,Fe as lineDiff,U as parsePatch,He as reversePatch,be as sentenceDiff,Se as structuredPatch,xe as wordDiff,De as wordsWithSpaceDiff};
